{
  "basic_info": {
    "description_header": "Hello!",
    "description": "ðŸ‘‹ DevOps lover, Cloud Solutions Architect con un fuerte background en desarrollo web. Experiencia en gestiÃ³n de infraestructura en la nube, especialmente en AWS. Creo soluciones escalables, resilientes y rentables utilizando Node.js, Python, Terraform y una variedad de servicios AWS (EC2, ECS, Lambda, RDS). Apasionado por CI/CD, confiabilidad y automatizaciÃ³n. Un jugador de equipo comprometido a fomentar una cultura DevOps y acelerar los ciclos de desarrollo.",
    "section_name": {
      "about": "A little about me",
      "projects": "Projects",
      "skills": "Skills",
      "experience": "Experiences"
    }
  },
  "projects": [
    {
      "title": "",
      "startDate": "",
      "description": "",
      "images": [
        ""
      ],
      "url": "",
      "technologies": [
        {
          "class": "",
          "name": ""
        }
      ]
    }
  ],
  "experience": [
    {
      "company": "Xcelis Consulting",
      "title": "",
      "description": "",
      "years": "03/2023 - present.",
      "technologies": [
        ""
      ],
      "mainProjects": [
        {
          "tag": "Under Construction...",
          "coverPhoto": "images/portfolio/multicloud/diagrama.png",
          "title": "SaaS / PaaS platform, powered by AI and cutting-edge technologies such as AWS, Docker, Terraform, Kubernetes",
          "text": [
            {
              "topic": "Under construction...",
              "content": "The application involves the automation and deployment of a cloud solution with a combination of SaaS and PaaS technologies. The AWS infrastructure is provisioned and managed using Terraform, and the application is deployed using Docker and Kubernetes. The process is automated with CI/CD practices and enhanced with AI assistants using OpenAI and Amazon Bedrock, as well as an exploration of MultiCloud strategies with Google Cloud and Microsoft Azure."
            },
            {
              "topic": "Technologies Used",
              "content": "â€¢ Node.js,;â€¢ Github,;â€¢ Docker,;â€¢ Terraform,;â€¢ Kubernetes,;â€¢ OpenAI,;â€¢ DynamoDB,;â€¢ AWS,;â€¢ S3,;â€¢ Lambda,;â€¢ Bedrock,;â€¢ ECR,;â€¢ CodePipeline,;â€¢ CodeBuild,;â€¢ Google BigQuery,;â€¢ Azure AI Language."
            },
            {
              "topic": "",
              "content": ""
            },
            {
              "topic": "",
              "content": ""
            },
            {
              "topic": "",
              "content": ""
            }
          ],
          "images": [
            {
              "titleImage": "",
              "image": ""
            }
          ],
          "videos": [
            {
              "titleVideo": "",
              "video": ""
            }
          ],
          "url": "",
          "technologies": [
            {
              "class": ""
            },
            {
              "name": ""
            }
          ]
        },
        {
          "tag": "My Portfolio",
          "coverPhoto": "images/portfolio/leopesi.com.br/capa.png",
          "title": "Single Page Application (SPA), SaaS / PaaS, created with AWS CodePipeline, CodeBuild and served on S3",
          "text": [
            {
              "topic": "SaaS Layer",
              "content": "Landing Page made in React, I used reusable components and state-based architecture. The components are combined with Bootstrap to create a responsive interface and a more pleasant aesthetic. I also used react-router-dom to navigate between different components and maintain a smoother experience."
            },
            {
              "topic": "PaaS Layer",
              "content": "The application was made using a series of AWS technologies. Starting with AWS CodePipeline, the application begins its lifecycle by fetching the code from the GitHub repository. Then, AWS CodeBuild is triggered to compile, prepare, and generate the application artifacts. Once the build is complete, the artifacts are stored in an Amazon S3 bucket. Amazon CloudFront is used to create a fast and efficient delivery of the site, which is accessed through the domain https://leopesi.com.br and managed by Route53. CloudFront is also configured with an SSL certificate managed by AWS Certificate Manager, ensuring security in requests."
            },
            {
              "topic": "Technologies Used",
              "content": "â€¢ React.js,;â€¢ Amazon CloudFront,;â€¢ AWS Certificate Manager,;â€¢ Route 53,;â€¢ AWS S3,;â€¢ AWS CodePipeline,;â€¢ AWS CodeBuild."
            },
            {
              "topic": "",
              "content": ""
            },
            {
              "topic": "",
              "content": ""
            },
            {
              "topic": "",
              "content": ""
            }
          ],
          "images": [
            {
              "titleImage": "",
              "image": ""
            }
          ],
          "videos": [
            {
              "titleVideo": "",
              "video": ""
            }
          ],
          "url": "https://github.com/leopesi/leopesi/tree/refactoring",
          "technologies": [
            {
              "class": ""
            },
            {
              "name": ""
            }
          ]
        },
        {
          "tag": "Mantis_API",
          "coverPhoto": "images/portfolio/mantis_api/aws-architecture-capa.png",
          "title": "Application, SaaS / PaaS, that uses AI to analyze, summarize and suggest personalized solutions for IT tickets.",
          "text": [
            {
              "topic": "SaaS Layer",
              "content": "IT support incident management tool. Integrated with the intranet (SharePoint) via iframe, it uses the Microsoft Graph API to capture the user account and makes a request to the MantisBT API to capture the tickets associated with the user and returns a list with the title and ticket number.; The user can request a ticket analysis and then another request is sent to the Gemini API with a script and the ticket json, which returns an analysis and summarizes each action applied in the case (If the user is from the support team, the analysis returns solution suggestions)."
            },
            {
              "topic": "PaaS Layer",
              "content": "Infrastructure (IaC) written with Terraform, integrated with GitLab (build/deploy) and versioned with git. Creates a VPC that defines the network where resources will be implemented. Then, public and private subnets are configured, followed by the database subnet group.; After that, security groups are configured to control traffic, including the RDS security group, ECS, and Load Balancer.; With the network and security prepared, the RDS database instance is created, along with the EFS and access point.; Next, the necessary IAM Role for ECS tasks execution is configured, followed by the creation of the ECS cluster and the application Task Definition. The Auto Scaling Target for ECS is then configured, allowing ECS scalability.; Finally, the target group for the ALB is created and, lastly, the template is processed. This sequence ensures that all necessary resources are ready before creating the application and load balancing services."
            },
            {
              "topic": "Flow",
              "content": " â€¢ Internet traffic enters the system through the ALB, which is in the public subnets. ; â€¢ The ALB distributes this traffic to ECS instances running in private subnets in both availability zones (for high availability and load balancing). ; â€¢ ECS instances can communicate with the RDS PostgreSQL database, which is in private subnets. ; â€¢ To connect to the internet for updates or other purposes, instances in private subnets go through the NAT Gateway, which is in a public subnet. "
            },
            {
              "topic": "Benefits",
              "content": "This architecture ensures high availability, scalability, and security by isolating sensitive services such as the database in private subnets and distributing traffic across multiple availability zones."
            },
            {
              "topic": "Technologies Used",
              "content": "â€¢ Python / Django,;â€¢ PostgreSQL,;â€¢ Microsoft Graph API,;â€¢ Gemini API,;â€¢ MantisBT API,;â€¢ Docker,;â€¢ Nginx,;â€¢ GitLab,;â€¢ Terraform,;â€¢ ECS (Fargate),;â€¢ ECR,;â€¢ RDS,;â€¢ EFS."
            }
          ],
          "images": [
            {
              "titleImage": "Diagram",
              "image": "images/portfolio/mantis_api/aws-architecture.jpg"
            }
          ],
          "videos": [
            {
              "titleVideo": "",
              "video": ""
            }
          ],
          "url": "Technologies Used",
          "technologies": [
            {
              "class": "Technologies Used"
            },
            {
              "name": "Technologies Used"
            }
          ]
        }
      ]
    },
    {
      "company": "Universidad TecnolÃ³gica Nacional - Buenos Aires",
      "title": "Exchange",
      "description": "",
      "years": "",
      "iconClass": "graduation",
      "technologies": [
        ""
      ],
      "mainProjects": [
        {
          "tag": "UTN Project",
          "coverPhoto": "images/portfolio/utn/utn.png",
          "title": "Node.js, Sequelize, Express, Bcrypt, Cors, JsonWebToken application and backend and frontend in React, Axios and Redux.",
          "text": [
            {
              "topic": "",
              "content": "The objective of this project was to put into practice some of the concepts covered in the university extension course in Web programming â€“ Full Stack Developer, which I took in the second semester of 2022, at the Universidad Tecnologica de Buenos Aires (UTN). The application has a user registration system, allowing different levels of access and providing a personalized experience for each type of user."
            },
            {
              "topic": "Technologies:",
              "content": "â€¢ The application is built using Node.js, Sequelize, Express, Bcrypt, Cors, JsonWebToken on the backend, and React, Axios, and Redux on the frontend.; â€¢ On the backend, we have a user registration system with different levels of access, such as Public, User, Moderator, and Administrator.; â€¢ User authentication is done using JWT, and passwords are encrypted using bcrypt.; â€¢ The MySQL database is used to store customer information and their respective addresses, with separate tables and a one-to-one relationship.; â€¢ On the frontend, React consumes the API through Axios, and the application state is managed by Redux."
            },
            {
              "topic": "Choice of Technologies",
              "content": "Security and privacy: The use of bcrypt to encrypt passwords and JWT for authentication ensures the security of user information. ; â€¢  Access levels: The user registration system with different access levels allows controlling the permissions of each user within the application, so each one has access only to the necessary information and functionalities. ; â€¢ Scalability: Node.js and React are scalable technologies that allow the application to be easily expanded. ; â€¢ Maintenance: The use of popular and well-documented technologies, such as Node.js, React, and MySQL, facilitates the maintenance of the application and the hiring of new developers."
            },
            {
              "topic": "Route proof",
              "content": "https://www.postman.com/restless-water-10959/workspace/curso-utn-node-js/api/d1301b31-098b-4651-8d18-ee78cb941df8"
            }
          ],
          "images": [
            {
              "titleImage": "Route Flow",
              "image": "images/portfolio/utn/1.jpg"
            },
            {
              "titleImage": "",
              "image": "images/portfolio/utn/2.jpg"
            },
            {
              "titleImage": "",
              "image": "images/portfolio/utn/3.jpg"
            },
            {
              "titleImage": "",
              "image": "images/portfolio/utn/4.jpg"
            },
            {
              "titleImage": "",
              "image": "images/portfolio/utn/5.jpg"
            },
            {
              "titleImage": "",
              "image": "images/portfolio/utn/6.jpg"
            },
            {
              "titleImage": "",
              "image": "images/portfolio/utn/7.jpg"
            },
            {
              "titleImage": "",
              "image": "images/portfolio/utn/8.jpg"
            },
            {
              "titleImage": "",
              "image": "images/portfolio/utn/9.jpg"
            },
            {
              "titleImage": "",
              "image": "images/portfolio/utn/10.jpg"
            }
          ],
          "videos": [
            {
              "titleVideo": "",
              "video": ""
            }
          ],
          "pdfs": [
            {
              "titlePDF": "",
              "pdf": ""
            }
          ],
          "url": "https://github.com/leopesi/proyecto_UTN",
          "technologies": [
            {
              "class": ""
            },
            {
              "name": "JavaScript"
            }
          ]
        }
      ]
    },
    {
      "company": "Campos Piscinas - SÃ£o Paulo",
      "title": "Project Manager - Co-owner",
      "description": "",
      "years": "03/2012 - 03/2021",
      "technologies": [
        ""
      ],
      "mainProjects": [
        {
          "tag": "Contrasseco",
          "coverPhoto": "images/portfolio/contrasseco/arduino.jpg",
          "title": "Embedded monitoring system for motor pump with C++ and Arduino",
          "text": [
            {
              "topic": "Problem:",
              "content": "The pool sector faces a frequent problem of motor pump burnout, which occurs when the pump runs dry, without water passing through the piping. This causes the rotor to overheat, leading to its deformation and eventually the complete failure of the motor pump. Several factors can contribute to the dry running of the motor pump, including clogged piping or suction drain obstruction. In some extreme cases, children can get stuck by suction in the pool's bottom drain, which can lead to serious injury or even death."
            },
            {
              "topic": "Impact:",
              "content": "This problem has negative impacts, such as delays in pool use, additional costs for motor pump replacement or repair, and risks to the safety of people using the pool."
            },
            {
              "topic": "Objective:",
              "content": "Develop an automated monitoring and control system to prevent the dry running of the motor pump in pools, ensuring the safety of people and prolonging the equipment's lifespan."
            },
            {
              "topic": "Resources:",
              "content": "After evaluating several possibilities, we arrived at the set of technologies for creating the test prototype:;â€¢ Microsoft Visio;â€¢ Arduino;â€¢ C++ Lineage;â€¢ Tinkercad (3D Modeling Program); â€¢ Flow switch sensor;"
            },
            {
              "topic": "Implementation:",
              "content": "With a flow switch installed in the motor pump discharge, it is possible to identify when the water flow is interrupted, either by obstruction of the bottom drain or vacuum, air in the piping, or any other reason. At this moment, the device's NO SAFE mode is activated, which makes some attempts to restore the normal flow, as illustrated in the flowchart below. If the normal water flow is restored, the device returns to SAFE mode; otherwise, SETUP mode is activated, which turns off the motor pump and activates an alert light."
            },
            {
              "topic": "Evaluation:",
              "content": "The device obtained unsatisfactory results due to the inaccuracy of the sensors available at the time, such as the flow switch sensor, which did not allow fine water passage. The algorithm developed for the Arduino met the requirements of the operating flowchart. Other sensor options that could offer greater precision would make the final product much more expensive, exceeding the product's cost expectations."
            },
            {
              "topic": "Conclusion:",
              "content": "The Contrasseco device from Campos Piscinas proved to be technically feasible, but the project was halted due to commercial unfeasibility, as in low scale it would be a very expensive product for the market at that time."
            }
          ],
          "images": [
            {
              "titleImage": "Flowchart",
              "image": "images/portfolio/contrasseco/fluxograma.png"
            },
            {
              "titleImage": "Arduino Prototype",
              "image": "images/portfolio/contrasseco/arduino.jpg"
            },
            {
              "titleImage": "Electronic Scheme",
              "image": "images/portfolio/contrasseco/esquema.png"
            }
          ],
          "videos": [
            {
              "titleVideo": "",
              "video": ""
            }
          ],
          "pdfs": [
            {
              "titlePDF": "",
              "pdf": ""
            }
          ],
          "url": "https://github.com/leopesi/Contrasseco",
          "technologies": [
            {
              "class": ""
            },
            {
              "name": "Arduino"
            }
          ]
        },
        {
          "tag": "Lighting",
          "coverPhoto": "images/portfolio/iluminacao/Led (2).jpg",
          "title": "",
          "text": [
            {
              "topic": "Problem:",
              "content": "Underwater lighting in pools has always been a critical point in projects, as it is common for infiltration and device burnout to occur. This is because lighting devices are usually shielded chambers with a translucent lens made of acrylic or glass, and failure can occur when the lens breaks, the shield seal fails, or, as has happened a few times, water penetrates through the electrical wiring. As a result, underwater lighting problems have led to a high rate of complaints and increased costs."
            },
            {
              "topic": "Objective:",
              "content": "Develop an underwater lighting device that is suitable for the pool environment."
            },
            {
              "topic": "Escopo:",
              "content": "â€¢ Device design: The new device must have an innovative design that prevents water infiltration and protects electrical wiring, reducing the occurrence of failures.; â€¢ Materials: The materials used in the construction of the device must be high quality and corrosion resistant, ensuring a long service life and reducing the need for maintenance.; â€¢ Performance: The device must provide strong and uniform lighting, with color options and a minimum lighting angle of 120Âº.; â€¢ Testing: The device must undergo rigorous testing to ensure it meets electrical safety and water resistance standards.; â€¢ Compatibility: The device must be compatible with existing pool lighting systems.; â€¢ Price: The device's price must be competitive compared to other devices on the market.;"
            },
            {
              "topic": "Design:",
              "content": "â€¢ Material: The device will be made of stainless steel to ensure resistance to corrosion caused by chlorine in pool water.; â€¢ Fixing system: The device will be attached to the pool by thread or oring fitting, following market standards. This will facilitate the installation and maintenance of the device.; â€¢ Lighting: The device will use SMD LEDs, round with a 300mm diameter, 3 RGB LEDs of 3W each and a resistor for 12V, ensuring a minimum power of 9W, providing comprehensive and bright lighting in the pool. LED technology also offers energy savings and a longer lifespan compared to other lighting technologies.; â€¢ Power supply: The device will be powered by a 12V power source, reducing the risk of electric shock in the pool.; â€¢ Waterproofing: The design of the device will ensure that there is no possibility of water infiltration, with proper sealing of the electronic components and wiring. This will reduce failures and increase the device's lifespan.; The new underwater lighting device will have a strong and efficient design, providing strong and uniform lighting in the pool, with easy installation and maintenance. Additionally, ensuring that there will be no water infiltration will minimize failures and increase pool user safety."
            },
            {
              "topic": "Prototyping:",
              "content": "During the prototyping phase, the team faced various challenges in finding qualified suppliers that met the product's specifications and could ensure large-scale production.; â€¢ LED niche: We made the technical drawing to ensure that the prototype would meet the compatibility and design requirements of the scope.; â€¢ PCB board: Another important step was the creation of the PCB board's electronic schematic. The team conducted a detailed supplier search in Brazil and China until they found one that met all necessary specifications.; â€¢ Waterproofing: The team found an innovative solution by filling the entire niche with transparent epoxy resin, which offers excellent mechanical properties and heat resistance. This solution was crucial to ensure the device's protection against water ingress, thus preventing infiltration issues.;"
            },
            {
              "topic": "Testing:",
              "content": "After the first batch of products was manufactured, the team began the testing phase to evaluate the quality and durability of the device. First, we performed endurance tests, keeping the LED on continuously for 7 days in a non-aquatic environment to assess its ability to withstand the heat generated by its own operation.; In addition, we conducted physical shock tests to assess the resistance of the resin and the stainless steel niche.; The transparency of the resin was also tested through prolonged sun exposure to assess whether its properties would be lost over time.; In summary, the evaluation phase was crucial to ensure the quality and durability of the product. The endurance and physical shock tests allowed the team to verify the device's resistance to potential impacts and damage, while the resin's transparency test ensured that the product could maintain its properties over time."
            },
            {
              "topic": "Launch:",
              "content": "With low-scale production costs within the scope's definition, we introduced the new product to the market through our clients, where we began installing them in all new projects. In a second phase, we expanded the product's sale to online retail, further increasing the reach and visibility of the device. With the success of sales, we closed a supply contract with a partner pool products distributor, ensuring greater distribution and reach for our product."
            },
            {
              "topic": "Conclusion:",
              "content": "The project was highly successful, as we were able to meet all the requirements defined in the scope and develop an innovative product, using epoxy resin, which provided greater safety and durability for users.; Additionally, the introduction of the new product to the market brought a new source of revenue for the company. The project's success is the result of the teamwork of a highly qualified team that knew how to face challenges and overcome difficulties throughout the entire process."
            }
          ],
          "images": [
            {
              "titleImage": "",
              "image": "images/portfolio/iluminacao/Led (2).jpg"
            },
            {
              "titleImage": "Installation Illustration",
              "image": "images/portfolio/iluminacao/DesenhoInstalaÃ§Ã£o (2).jpg"
            },
            {
              "titleImage": "Lighting Angle",
              "image": "images/portfolio/iluminacao/Amplitude.jpg"
            },
            {
              "titleImage": "Technical Drawing",
              "image": "images/portfolio/iluminacao/DesenhoDispositivo (1).jpg"
            },
            {
              "titleImage": "",
              "image": "images/portfolio/iluminacao/DesenhoDispositivo (2).jpg"
            },
            {
              "titleImage": "PCB Board Drawing",
              "image": "images/portfolio/iluminacao/PCBLED.jpg"
            }
          ],
          "videos": [
            {
              "titleVideo": "",
              "video": ""
            }
          ],
          "pdfs": [
            {
              "titlePDF": "",
              "pdf": ""
            }
          ],
          "url": "",
          "technologies": [
            {
              "class": ""
            },
            {
              "name": ""
            }
          ]
        },
        {
          "tag": "EasyPool",
          "coverPhoto": "images/portfolio/easy-pool/capa.png",
          "title": "SaaS tool for pool budgeting built with Node.js, Vue.js, SQL...",
          "text": [
            {
              "topic": "Problema:",
              "content": "The pool industry is constantly growing, which requires builders to provide accurate and reliable budgets to ensure customer satisfaction and project profitability. However, preparing a budget for a custom pool can be a complex task, involving several factors such as dimensions, materials, supplies, services, and payment methods. Currently, professionals in the field face the challenge of preparing accurate budgets without the help of appropriate technological tools, which can result in budgeting errors and financial losses for the builder."
            },
            {
              "topic": "Objective:",
              "content": "Develop software for the pool sector that assists builders in preparing accurate and efficient budgets, automating the processes involved, aiming to ensure customer satisfaction and project profitability, deepen the sector's professionalization, and increase the competitiveness of professionals in the market."
            },
            {
              "topic": "Scope:",
              "content": "â€¢ Requirements analysis: Conduct a detailed analysis of the software's functional and non-functional requirements, considering the needs of pool builders, customers, and the market.; â€¢ Software design and development: Create a robust and scalable software architecture using cutting-edge technologies.; â€¢ Testing and validation: Conduct rigorous testing of all software functionalities to ensure its quality and reliability, while also validating the raised requirements.; â€¢ Deployment and training: Carry out the software deployment, offering training and technical support to users, aiming to ensure its adoption and project success.; â€¢ Maintenance and evolution: Perform corrective and evolutionary maintenance on the software to ensure its updates and adaptation to new market needs.; â€¢ Expected results: Develop specialized software for the pool sector that assists builders in preparing accurate and efficient budgets, automating the processes involved, aiming to ensure customer satisfaction and project profitability, deepen the sector's professionalization, and increase the competitiveness of professionals in the market.;"
            },
            {
              "topic": "MVP:",
              "content": "As this is a tool that brings together several inputs, labor, payment methods, and customization of pool dimensions and shapes, an MVP (minimum viable product) was created in Excel to simulate and test the functionalities."
            },
            {
              "topic": "MVP Testing:",
              "content": "â€¢ Objectives: Evaluate the performance and functionality of the MVP in different usage scenarios and gather feedback from end users and other stakeholders.; â€¢ Criteria: The MVP must be able to generate quotes quickly, accurately, and reliably, considering the variables and specifications of each project. The MVP must be easy to use and intuitive.; â€¢ Tools: To perform the tests, an Excel model will be used to simulate all quoting scenarios, questionnaires will be used to collect user feedback, and telephone interviews will be conducted."
            },
            {
              "topic": "Analysis:",
              "content": "After testing the EasyPool tool, some relevant conclusions were obtained for its development. First, it was found that it is necessary to create a UI and UX design to improve the user experience and ensure that the tool achieves its goals. This is because EasyPool has several features and configuration options, which can make its use complex and difficult for some users.; Additionally, it was observed that the calculation of custom pools requires extra and specific inputs for each project, such as the calculation of the perimeter, maximum length, and maximum width, which need to be done manually. To facilitate this process, it would be recommended to introduce suggested models of irregularly shaped pools, which could be adapted to the needs of each user.; Another highlight of the tests was the validation of the formulas created for calculating pool dimensions, equipment sizing, payment methods, material lists, etc. All formulas were checked and approved, ensuring the accuracy of the calculations and the reliability of the information provided by EasyPool."
            }
          ],
          "images": [
            {
              "titleImage": "MVP - Quotation Screen",
              "image": "images/portfolio/easy-pool/planilha.png"
            },
            {
              "titleImage": "MVP - Payment Options",
              "image": "images/portfolio/easy-pool/planilha2.png"
            },
            {
              "titleImage": "",
              "image": ""
            }
          ],
          "videos": [
            {
              "titleVideo": "EasyPool - Presentation Video",
              "video": "https://www.youtube.com/embed/EFTK-K8jWsI"
            }
          ],
          "pdfs": [
            {
              "titlePDF": "MVP - Material List",
              "pdf": "images/portfolio/easy-pool/MVP - EasyPool - back-up.pdf"
            },
            {
              "titlePDF": "Requirements Document",
              "pdf": "images/portfolio/easy-pool/Documento de Requisitos EasyPool.pdf"
            }
          ],
          "url": "www.leopesi.com.br",
          "technologies": [
            {
              "class": ""
            },
            {
              "name": ""
            }
          ]
        }
      ]
    }
  ]
}