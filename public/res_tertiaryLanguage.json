{
	"basic_info": {
    "description_header": "Hola, me llamo Leonardo y soy Arquitecto de Soluciones Cloud apasionado por el mundo DevOps, poseo una sólida base en desarrollo web y una vasta experiencia en gestión de infraestructura en la nube. Hace un tiempo atrás decidí crear esta página como portafolio y ahora, finalmente, la he publicado, medio que al estilo MVP (Minimum Viable Product), ya que todavía estoy creando y mejorando. Estoy documentando y publicando aquí algunos proyectos que he desarrollado recientemente (incluyendo este del portafolio), además de nuevos proyectos DevOps que vienen por ahí. Soy especialista en crear soluciones creativas para entornos escalables y resilientes, con foco en optimización y eficiencia, principalmente en el ambiente AWS donde cuido de algunas pipelines actualmente. Tengo experiencia con integración de sistemas multiplataforma, soy proficiente en tecnologías que destaco aquí: JavaScript, Python, RESTful APIs, Docker, Terraform, Gitlab y una amplia gama de servicios AWS como EC2, ECS, Lambda, S3 y RDS, entre otros. Siempre estoy motivado a buscar las novedades que la computación en nube trae así como implementar mejoras en las pipelines para garantizar la confiabilidad y hacer entregas inteligentes.",
    "description": "Una observacioncita: Voy a documentar todos los proyectos y disponibilizar el repositorio público en Github, pero por el momento algunos están aún carentes de información.",
    "section_name": {
        "about": "Un poco sobre mí",
        "projects": "Proyectos",
        "skills": "Skills",
        "experience": "Experiencias"
    }
},
	"projects": [
	  {
		"title": "",
		"startDate": "",
		"description": "",
		"images": [
		  ""
		],
		"url": "",
		"technologies": [
		  {
			"class": "",
			"name": ""
		  }
		]
	  }
	],
	"experience": [
	  {
		"company": "Xcelis Consulting",
		"title": "",
		"description": "",
		"years": "03/2023 - até o momento.",
		"technologies": [
		  ""
		],
    "mainProjects": [
      {
        "tag": "En construcción...",
        "coverPhoto": "images/portfolio/multicloud/diagrama.png",
        "title": "Plataforma de e-commerce mejorada con IA e infraestructura avanzada como Docker, AWS, Terraform y Kubernetes",
        "text": [
          {
            "topic": "En construcción...",
            "content": "La aplicación involucra la automatización e implementación de una solución en la nube utilizando una combinación de tecnologías. La infraestructura de AWS se provisiona y gestiona utilizando Terraform y la aplicación se implementa utilizando Docker y Kubernetes. El proceso se automatiza con prácticas de CI/CD y se mejora con asistentes de IA utilizando OpenAI y Amazon Bedrock, además de una exploración de estrategias MultiCloud con Google Cloud y Microsoft Azure."
          },
          {
            "topic": "Tecnologías Utilizadas",
            "content": "• Node.js,;• Github,;• Docker,;• Terraform,;• Kubernetes,;• OpenAI,;• DynamoDB,;• AWS,;• S3,;• Lambda,;• Bedrock,;• ECR,;• CodePipeline,;• CodeBuild,;• Google BigQuery,;• Azure AI Language."
          },
          {
            "topic": "",
            "content": ""
          },
          {
            "topic": "",
            "content": ""
          },
          {
            "topic": "",
            "content": ""
          }
        ],
        "images": [
          {
            "titleImage": "",
            "image": ""
          }
        ],
        "videos": [
          {
            "titleVideo": "",
            "video": ""
          }
        ],
        "url": "",
        "technologies": [
          {
            "class": ""
          },
          {
            "name": ""
          }
        ]
      },
      {
        "tag": "Mi Portafolio",
        "coverPhoto": "images/portfolio/leopesi.com.br/flow_capa.png",
        "title": "Automatización del despliegue y entrega de una aplicación web estática (React) en AWS usando CI/CD y DNS.",
        "text": [
          {
            "topic": "Aplicación web estática con AWS S3 y CI/CD",
            "content": "Aplicación web estática construida con React, diseñada como una página de destino, que se convirtió en mi portafolio personal, servido en un bucket en AWS S3 y el proceso de construcción y despliegue está automatizado en AWS con CI/CD."
          },
          {
            "topic": "Página de destino con React: Componentización, estado y Bootstrap.",
            "content": "Página de destino construida con React, utilizando componentes reutilizables y arquitectura basada en estado. Los componentes se combinan con Bootstrap para crear una interfaz receptiva y con una estética agradable. También utilicé react-router-dom para navegar entre los diferentes componentes y mantener una experiencia más fluida."
          },
          {
            "topic": "Automatización del Despliegue y Entrega en AWS Usando CI/CD",
            "content": "La aplicación fue construida utilizando una serie de tecnologías de AWS. Comenzando con AWS CodePipeline, la aplicación comienza su ciclo de vida recuperando el código del repositorio de GitHub. Luego, AWS CodeBuild se activa para compilar, preparar y generar los artefactos de la aplicación. Una vez que se completa la construcción, los artefactos se almacenan en un bucket de Amazon S3. Amazon CloudFront se utiliza para entregar el sitio de forma rápida y eficiente, accedido a través del dominio https://leopesi.com.br, gestionado por Route 53. CloudFront también está configurado con un certificado SSL gestionado por AWS Certificate Manager, garantizando la seguridad en las solicitudes."
          },
          {
            "topic": "Tecnologías Utilizadas",
            "content": "• React.js,;• Amazon CloudFront,;• AWS Certificate Manager,;• Route 53,;• AWS S3,;• AWS CodePipeline,;• AWS CodeBuild."
          }
        ],
        "images": [
          {
            "titleImage": "Flow",
            "image": "images/portfolio/leopesi.com.br/flow.png"
          },
          {
            "titleImage": "Pipeline",
            "image": "images/portfolio/leopesi.com.br/pipeline.png"
          }
        ],
        "videos": [
          {
            "titleVideo": "",
            "video": ""
          }
        ],
        "url": "https://github.com/leopesi/leopesi/tree/refactoring",
        "technologies": [
          {
            "class": ""
          },
          {
            "name": ""
          }
        ]
      },
      {
        "tag": "Mantis_API",
        "coverPhoto": "images/portfolio/mantis_api/capa.png",
        "title": "Despliegue de aplicación Django con Infraestructura de AWS: Docker, Terraform y GitLab: Desde VPC hasta Load Balancer.",
        "text": [
          {
            "topic": "Gestión de Incidentes e Integración con Automatización de Infraestructura",
            "content": "Esta aplicación une dos mundos: la gestión de incidentes de TI y la automatización de infraestructura. Por un lado, tenemos una aplicación que integra SharePoint con MantisBT y la IA de Gemini, permitiendo a los usuarios realizar un seguimiento y analizar sus tickets de soporte con IA que analiza el incidente en función del perfil del usuario. Por otro lado, hay una infraestructura robusta provisionada automáticamente en AWS con Terraform y GitLab. Juntas, estas soluciones ofrecen una plataforma completa que optimiza tanto la gestión de problemas como la entrega de recursos de TI."
          },
          {
            "topic": "Gestión de Incidentes con SharePoint vía Microsoft Graph API y MantisBT",
            "content": "Herramienta de gestión de incidentes de soporte de TI con Python. Integrada en la intranet (SharePoint) a través de iframe, utiliza la API de Microsoft Graph para capturar la cuenta de Microsoft del usuario y realiza una solicitud a la API de MantisBT para recuperar los tickets asociados con el usuario, devolviendo una lista con el título y número del ticket. El usuario puede solicitar un análisis del ticket, y luego se envía otra solicitud a la API de Gemini con un script y el json del ticket, que devuelve un análisis y resume cada acción aplicada en el caso (Si el usuario es un Global Reader, devuelve un entorno de soporte con un análisis y sugerencias para resolver el incidente con una integración con la IA de la API de Gemini)."
          },
          {
            "topic": "Despliegue Automático de Infraestructura en AWS con Terraform y GitLab: Desde VPC hasta Load Balancer",
            "content": "Infraestructura (IaC) escrita con Terraform, integrada con GitLab (build/deploy), y versionada con git. Crea una VPC que define la red donde se desplegarán los recursos. Luego, se configuran subredes públicas y privadas, seguidas del grupo de subredes de la base de datos. Después de eso, se configuran los grupos de seguridad para controlar el tráfico, incluyendo el grupo de seguridad de RDS, ECS y Load Balancer. Con la red y la seguridad en su lugar, se crea la instancia de base de datos RDS, junto con el EFS y el punto de acceso. Luego, se configura el rol de IAM requerido para la ejecución de tareas de ECS, seguido de la creación del clúster de ECS y la definición de tareas de la aplicación. A continuación, se configura el objetivo de autoescalado de ECS, lo que permite la escalabilidad de ECS. Finalmente, se crea el grupo objetivo para el ALB y se procesa la plantilla. Esta secuencia asegura que todos los recursos necesarios estén listos antes de que se creen los servicios de la aplicación y el balanceo de carga."
          },
          {
            "topic": "Flujo de Tráfico",
            "content": " • El tráfico de Internet ingresa al sistema a través del ALB, que está en las subredes públicas.; • El ALB distribuye este tráfico a las instancias de ECS que se ejecutan en subredes privadas en ambas zonas de disponibilidad (para alta disponibilidad y balanceo de carga).; • Las instancias de ECS pueden comunicarse con la base de datos PostgreSQL RDS, que está en las subredes privadas.; • Para conectarse a Internet con fines de actualizaciones u otros propósitos, las instancias en las subredes privadas pasan a través del NAT Gateway, que está en una subred pública."
          },
          {
            "topic": "Beneficios",
            "content": "Esta arquitectura garantiza alta disponibilidad, escalabilidad y seguridad al aislar servicios sensibles como la base de datos en subredes privadas y distribuir el tráfico entre varias zonas de disponibilidad."
          },
          {
            "topic": "Tecnologías Utilizadas",
            "content": "• Python / Django,;• PostgreSQL,;• Microsoft Graph API,;• Gemini API,;• MantisBT API,;• Docker,;• Nginx,;• GitLab,;• Terraform,;• ECS (Fargate),;• ECR,;• RDS,;• EFS."
          }
        ],
        "images": [
          {
            "titleImage": "Diagrama",
            "image": "images/portfolio/mantis_api/aws-architecture.jpg"
          }
        ],
        "videos": [
          {
            "titleVideo": "",
            "video": ""
          }
        ],
        "url": "Tecnologías Utilizadas",
        "technologies": [
          {
            "class": "Tecnologías Utilizadas"
          },
          {
            "name": "Tecnologías Utilizadas"
          }
        ]
      }
    ]
	  },
	  {
		"company": "Universidad Tecnológica Nacional - Buenos Aires",
		"title": "Intercâmbio",
		"description": "",
		"years": "",
		"iconClass": "graduation",
		"technologies": [
		  ""
		],
		"mainProjects": [
      {
        "tag": "Proyecto UTN",
        "coverPhoto": "images/portfolio/utn/utn.png",
        "title": "Aplicación Node.js, Sequelize, Express, Bcrypt, Cors, JsonWebToken y backend con React, Axios y Redux en el front-end.",
        "text": [
          {
            "topic": "",
            "content": "El objetivo de este proyecto fue poner en práctica algunos de los conceptos abordados en el curso de extensión universitaria en Programación Web – Full Stack Developer, que completé en el segundo semestre de 2022 en la Universidad Tecnológica de Buenos Aires (UTN). La aplicación incluye un sistema de registro de usuarios, permitiendo diferentes niveles de acceso y proporcionando una experiencia personalizada para cada tipo de usuario."
          },
          {
            "topic": "Tecnologías:",
            "content": "• La aplicación está construida utilizando Node.js, Sequelize, Express, Bcrypt, Cors y JsonWebToken en el backend, y React, Axios y Redux en el front-end.; • En el backend, tenemos un sistema de registro de usuarios con diferentes niveles de acceso, como Público, Usuario, Moderador y Administrador.; • La autenticación de usuarios se realiza utilizando JWT, y las contraseñas se encriptan usando bcrypt.; • La base de datos MySQL se utiliza para almacenar la información de los clientes y sus respectivas direcciones, con tablas separadas y una relación uno a uno.; • En el front-end, React consume la API a través de Axios, y el estado de la aplicación se gestiona mediante Redux."
          },
          {
            "topic": "Elección de Tecnologías",
            "content": "Seguridad y privacidad: El uso de bcrypt para encriptar contraseñas y JWT para la autenticación asegura la seguridad de la información de los usuarios.; • Niveles de acceso: El sistema de registro de usuarios con diferentes niveles de acceso permite controlar los permisos de cada usuario dentro de la aplicación, asegurando que cada uno tenga acceso solo a la información y funcionalidades necesarias.; • Escalabilidad: Node.js y React son tecnologías escalables que permiten que la aplicación sea fácilmente ampliada.; • Mantenimiento: El uso de tecnologías populares y bien documentadas, como Node.js, React y MySQL, facilita el mantenimiento de la aplicación y la contratación de nuevos desarrolladores."
          },
          {
            "topic": "Pruebas de rutas",
            "content": "https://www.postman.com/restless-water-10959/workspace/curso-utn-node-js/api/d1301b31-098b-4651-8d18-ee78cb941df8"
          }
        ],
        "images": [
          {
            "titleImage": "Flujo de rutas",
            "image": "images/portfolio/utn/1.jpg"
          },
          {
            "titleImage": "",
            "image": "images/portfolio/utn/2.jpg"
          }
        ],
        "videos": [
          {
            "titleVideo": "",
            "video": ""
          }
        ],
        "pdfs": [
          {
            "titlePDF": "",
            "pdf": ""
          }
        ],
        "url": "https://github.com/leopesi/proyecto_UTN",
        "technologies": [
          {
            "class": ""
          },
          {
            "name": "JavaScript"
          }
        ]
      }
    ]

	  },
	  {
		"company": "Campos Piscinas - São Paulo",
		"title": "",
		"description": ".",
		"years": "",
		"technologies": [
		  ""
		],
		"mainProjects": [
		  {
        "tag": "Contrasseco",
        "coverPhoto": "images/portfolio/contrasseco/arduino.jpg",
        "title": "Sistemas embebidos para monitoreo de bombas de agua con C++ y Arduino",
        "text": [
          {
            "topic": "Problema:",
            "content": "El sector de piscinas enfrenta un problema frecuente de quema de bombas de agua, que ocurre cuando la bomba trabaja en seco, sin el paso de agua a través de la tubería. Esto provoca el sobrecalentamiento del rotor, lo que lleva a su deformación y, eventualmente, a la falla completa de la bomba de agua. Varios factores pueden contribuir al funcionamiento en seco de la bomba, incluyendo bloqueos en las tuberías u obstrucciones en el desagüe de succión. En algunos casos extremos, los niños pueden quedar atrapados por la succión en el desagüe de fondo de la piscina, lo que puede resultar en lesiones graves o incluso la muerte."
          },
          {
            "topic": "Impacto:",
            "content": "Este problema tiene impactos negativos, como retrasos en el uso de la piscina, costos adicionales para el reemplazo o reparación de la bomba de agua y riesgos de seguridad para las personas que utilizan la piscina."
          },
          {
            "topic": "Objetivo:",
            "content": "Desarrollar un sistema de monitoreo y control automatizado para evitar el funcionamiento en seco de la bomba de agua en piscinas, garantizando la seguridad de las personas y prolongando la vida útil del equipo."
          },
          {
            "topic": "Recursos:",
            "content": "Después de evaluar varias posibilidades, llegamos al conjunto de tecnologías para la creación del prototipo de prueba:; • Microsoft Visio; • Arduino; • Linaje C++; • Tinkercad (Programa de modelado tridimensional); • Sensor de flujo de agua;"
          },
          {
            "topic": "Implementación:",
            "content": "Con un sensor de flujo instalado en la descarga de la bomba es posible identificar cuando se interrumpe el flujo de agua, ya sea por obstrucción del desagüe de fondo o aspiradora, aire en las tuberías u otra razón. En ese momento, se activa el modo NO SAFE, que intenta restablecer el flujo normal, como se ilustra en el siguiente diagrama de flujo. Si se restablece el flujo normal de agua, el dispositivo vuelve al modo SAFE; de lo contrario, se activa el modo SETUP, que apaga la bomba y enciende una luz de advertencia."
          },
          {
            "topic": "Evaluación:",
            "content": "El dispositivo obtuvo resultados poco satisfactorios debido a la imprecisión de los sensores disponibles en ese momento, como el sensor de flujo que no permitía una detección precisa del flujo de agua. El algoritmo desarrollado para Arduino cumplió con los requisitos del diagrama de flujo de operación. Otras opciones de sensores que pudieran ofrecer mayor precisión encarecerían mucho el producto final, superando el precio esperado para el producto."
          },
          {
            "topic": "Conclusión:",
            "content": "El dispositivo Contrasseco de Campos Piscinas demostró ser técnicamente viable, pero el proyecto fue detenido debido a la inviabilidad comercial, ya que a pequeña escala sería un producto demasiado caro para el mercado en ese momento."
          }
        ],
        "images": [
          {
            "titleImage": "Diagrama de flujo",
            "image": "images/portfolio/contrasseco/fluxograma.png"
          },
          {
            "titleImage": "Prototipo de Arduino",
            "image": "images/portfolio/contrasseco/arduino.jpg"
          },
          {
            "titleImage": "Esquema electrónico",
            "image": "images/portfolio/contrasseco/esquema.png"
          }
        ],
        "videos": [
          {
            "titleVideo": "",
            "video": ""
          }
        ],
        "pdfs": [
          {
            "titlePDF": "",
            "pdf": ""
          }
        ],
        "url": "https://github.com/leopesi/Contrasseco",
        "technologies": [
          {
            "class": ""
          },
          {
            "name": "Arduino"
          }
        ]
      },
		  {
			"tag": "Iluminação",
			"coverPhoto": "images/portfolio/iluminacao/Led (2).jpg",
			"title": "",
			"text": [
			  {
				"topic": "Problema:",
				"content": "A iluminação submersa em piscinas sempre foi um ponto crítico em projetos, uma vez que é comum ocorrer infiltração e queima de dispositivos. Isso se deve ao fato de que os dispositivos de iluminação são normalmente câmeras blindadas com uma lente translúcida feita de acrílico ou vidro, e a falha pode ocorrer quando a lente quebra, a vedação da blindagem falha ou, como já aconteceu algumas vezes, água penetra através da fiação elétrica. Como resultado, os problemas de iluminação subaquática levaram a uma taxa elevada de reclamações e aumento nos custos."
			  },
			  {
				"topic": "Objetivo: ",
				"content": "Desenvolver um dispositivo de iluminação subaquática que seja adequado ao ambiente de piscinas."
			  },
			  {
				"topic": "Escopo:",
				"content": "• Design do dispositivo: O novo dispositivo deve ter um design inovador que evite a infiltração de água e proteja a fiação elétrica, reduzindo a ocorrência de falhas.; • Materiais: Os materiais utilizados na construção do dispositivo devem ser de alta qualidade e resistentes à corrosão, garantindo uma longa vida útil e reduzindo a necessidade de manutenção.; • Desempenho: O dispositivo deve fornecer uma iluminação forte e uniforme, com opções de cor e um ângulo de iluminação mínimo de 120º.; • Testes: O dispositivo deve passar por testes rigorosos para garantir que atenda aos padrões de segurança elétrica e resistência à água.; • Compatibilidade: O dispositivo deve ser compatível com os sistemas de iluminação existentes em piscinas.; • Preço: O preço do dispositivo deve ser competitivo em relação a outros dispositivos no mercado.;"
			  },
			  {
				"topic": "Design:",
				"content": "• Material: O dispositivo será confeccionado em aço inoxidável para garantir a resistência à corrosão causada pelo cloro presente na água das piscinas.; • Sistema de fixação: O dispositivo será fixado à piscina por meio de rosca ou encaixe com oring, seguindo o padrão do mercado. Isso facilitará a instalação e manutenção do dispositivo.; • Iluminação: O dispositivo utilizará LEDs SMD, redondo com 300mm de diâmetro, 3 Leds RGB de 3W cada e resistor para 12 V, garantindo uma potência mínima de 9W, para fornecer uma iluminação abrangente e brilhante na piscina. A tecnologia LED também proporciona economia de energia e vida útil mais longa do que outras tecnologias de iluminação.; • Alimentação de energia: O dispositivo será alimentado por uma fonte de energia de 12V, reduzindo o risco de choque elétrico na piscina.; • Impermeabilidade: O design do dispositivo será projetado para garantir que não haja possibilidade de infiltração de água, com vedação adequada dos componentes eletrônicos e da fiação. Isso reduzirá a ocorrência de falhas e aumentará a vida útil do dispositivo.; O novo dispositivo de iluminação subaquática terá um design resistente e eficiente, que garantirá uma iluminação forte e uniforme na piscina, com facilidade de instalação e manutenção. Além disso, a garantia de que não haverá infiltração de água minimizará as falhas e aumentará a segurança dos usuários da piscina."
			  },
			  {
				"topic": "Prototipagem: ",
				"content": "Durante a fase de prototipagem, a equipe enfrentou diversos desafios para encontrar fornecedores qualificados que atendessem às especificações do produto e pudessem garantir a produção em larga escala.; • Nicho do led: Fizemos o desenho técnico para garantir que o protótipo cumpriria os requisitos de compatibilidade e design do escopo.; • Placa PCB: Outra etapa importante foi a criação do esquema eletrônico da placa PCB. A equipe realizou uma pesquisa detalhada de fornecedores no Brasil e na China até encontrar um  que atendesse todas as especificações necessárias.; • Impermeabilidade: A equipe conseguiu encontrar uma solução inovadora, preenchendo todo o nicho com resina epoxi transparente, que oferece ótimas propriedades mecânicas e de resistência ao calor. Essa solução foi crucial para garantir a proteção do dispositivo contra a entrada de água, evitando assim problemas com infiltração.;"
			  },
			  {
				"topic": "Testes: ",
				"content": "Após a fabricação do primeiro lote do produto, a equipe deu início à fase de testes para avaliar a qualidade e a durabilidade do dispositivo. Primeiramente, realizamos testes de resistência, deixando o LED ligado ininterruptamente por 7 dias em um ambiente não aquático para avaliar sua capacidade de resistir ao calor gerado pelo próprio funcionamento.; Além disso, fizemos testes de choque físico para avaliar a resistência da resina e do nicho em aço inoxidável.; A transparência da resina também foi testada através de uma exposição prolongada ao sol para avaliar se suas propriedades seriam perdidas ao longo do tempo.; Em resumo, a fase de avaliação foi crucial para garantir a qualidade e durabilidade do produto. Os testes de resistência e choque físico permitiram que a equipe verificasse a resistência do dispositivo a possíveis impactos e danos, enquanto o teste de transparência da resina garantiu que o produto pudesse manter suas propriedades ao longo do tempo."
			  },
			  {
				"topic": "Lançamento: ",
				"content": "Com o custo de produção em baixa escala dentro do definido no escopo, introduzimos o novo produto no mercado através de nossos cliente, onde passamos a instala-los em todos os novos projetos. Em uma segunda fase, expandimos a venda do produto para o varejo on-line, ampliando ainda mais o alcance e a visibilidade do dispositivo. Com o sucesso das vendas, fechamos um contrato de fornecimento com um distribuidor de produtos de piscina parceiro, garantindo assim uma maior distribuição e alcance do nosso produto."
			  },
			  {
				"topic": "Conclusão: ",
				"content": "O projeto foi altamente satisfatório, pois conseguimos cumprir todos os requisitos definidos no escopo e desenvolvemos um produto inovador, com a utilização da resina epóxi, que garantiu maior segurança e durabilidade para os usuários.; Além disso, a introdução do novo produto no mercado trouxe uma nova fonte de receita para a empresa. O sucesso do projeto é resultado do trabalho conjunto de uma equipe altamente qualificada, que soube enfrentar os desafios e superar as dificuldades ao longo de todo o processo."
			  }
			],
			"images": [
			  {
				"titleImage": "",
				"image": "images/portfolio/iluminacao/Led (2).jpg"
			  },
			  {
				"titleImage": "Ilustração de Instalação",
				"image": "images/portfolio/iluminacao/DesenhoInstalação (2).jpg"
			  },
			  {
				"titleImage": "Ângulo de Iluminação",
				"image": "images/portfolio/iluminacao/Amplitude.jpg"
			  },
			  {
				"titleImage": "Desenho Técnico",
				"image": "images/portfolio/iluminacao/DesenhoDispositivo (1).jpg"
			  },
			  {
				"titleImage": "",
				"image": "images/portfolio/iluminacao/DesenhoDispositivo (2).jpg"
			  },
			  {
				"titleImage": "Desenho da Placa PCB",
				"image": "images/portfolio/iluminacao/PCBLED.jpg"
			  }
			],
			"videos": [
			  {
				"titleVideo": "",
				"video": ""
			  }
			],
			"pdfs": [
			  {
				"titlePDF": "",
				"pdf": ""
			  }
			],
			"url": "",
			"technologies": [
			  {
				"class": ""
			  },
			  {
				"name": ""
			  }
			]
		  },
		  {
        "tag": "EasyPool",
        "coverPhoto": "images/portfolio/easy-pool/capa.png",
        "title": "Herramienta SaaS para presupuestos de piscinas hecha en Node.js, Vue.js, SQL",
        "text": [
          {
            "topic": "Problema:",
            "content": "La industria de las piscinas está en constante crecimiento, lo que exige que los constructores brinden presupuestos precisos y confiables para garantizar la satisfacción del cliente y la rentabilidad del proyecto. Sin embargo, la elaboración de un presupuesto para una piscina personalizada puede ser una tarea compleja, que involucra varios factores como dimensiones, materiales, insumos, servicios y formas de pago. Actualmente, los profesionales del sector enfrentan el desafío de elaborar presupuestos precisos sin la ayuda de herramientas tecnológicas adecuadas, lo que puede generar errores en la elaboración del presupuesto y pérdidas para el constructor."
          },
          {
            "topic": "Objetivo:",
            "content": "Desarrollar un software para el sector de piscinas que ayude a los constructores a elaborar presupuestos precisos y eficientes, automatizando los procesos involucrados, con el objetivo de garantizar la satisfacción del cliente y la rentabilidad del proyecto, profundizar la profesionalización del sector y aumentar la competitividad de los profesionales en el mercado."
          },
          {
            "topic": "Alcance:",
            "content": "• Análisis de requisitos: Realizar un análisis detallado de los requisitos funcionales y no funcionales del software, considerando las necesidades de los constructores de piscinas, clientes y del mercado.; • Diseño y desarrollo del software: Crear una arquitectura de software robusta y escalable, utilizando tecnologías de punta.; • Pruebas y validación: Realizar pruebas rigurosas en todas las funcionalidades del software para garantizar su calidad y fiabilidad, validando también los requisitos levantados.; • Implementación y capacitación: Implementar el software, ofreciendo capacitación y soporte técnico a los usuarios, garantizando su adopción y el éxito del proyecto.; • Mantenimiento y evolución: Realizar mantenimientos correctivos y evolutivos del software, para asegurar su actualización y adaptación a las nuevas necesidades del mercado.; • Resultados esperados: Desarrollar un software especializado para el sector de piscinas que ayude a los constructores a elaborar presupuestos precisos y eficientes, automatizando los procesos involucrados, con el objetivo de garantizar la satisfacción del cliente y la rentabilidad del proyecto, profundizar la profesionalización del sector y aumentar la competitividad de los profesionales en el mercado."
          },
          {
            "topic": "MVP:",
            "content": "Al tratarse de una herramienta que reúne varios insumos, mano de obra, formas de pago y personalización de las medidas y el formato de la piscina. Se creó un MVP (minimum value product) en Excel para simular y probar las funcionalidades."
          },
          {
            "topic": "Pruebas del MVP:",
            "content": "• Objetivos: Evaluar el desempeño y la funcionalidad del MVP en diferentes escenarios de uso y obtener retroalimentación de los usuarios finales y otras partes interesadas.; • Criterios: El MVP debe ser capaz de generar cotizaciones de forma rápida, precisa y confiable, considerando las variables y especificaciones de cada proyecto. El MVP debe ser fácil de usar e intuitivo.; • Herramientas: Para realizar las pruebas, se utilizará un modelo hecho en Excel para simular todos los escenarios de cotización, cuestionarios para recopilar retroalimentación de los usuarios y entrevistas telefónicas."
          },
          {
            "topic": "Análisis:",
            "content": "Después de realizar las pruebas en la herramienta EasyPool, se obtuvieron algunas conclusiones relevantes para su desarrollo. En primer lugar, se constató que es necesario crear un proyecto de UI y UX para mejorar la experiencia del usuario y garantizar que la herramienta alcance sus objetivos. Esto se debe a que EasyPool posee varios recursos y opciones de configuración, lo que puede hacer que su uso sea complejo y difícil para algunos usuarios.; Además, se observó que el cálculo de piscinas personalizadas requiere entradas adicionales y específicas de cada proyecto, como el cálculo del perímetro, la longitud máxima y la mayor anchura, que deben realizarse manualmente. Para facilitar este proceso, se recomendaría la introducción de modelos sugeridos de piscinas con formas irregulares, que podrían adaptarse a las necesidades de cada usuario.; Otro punto destacado en las pruebas fue la validación de las fórmulas creadas para los cálculos de las dimensiones de la piscina, el dimensionamiento de los equipos, las formas de pago, la lista de materiales, etc. Todas las fórmulas fueron verificadas y aprobadas, garantizando la precisión de los cálculos y la fiabilidad de la información proporcionada por EasyPool."
          }
        ],
        "images": [
          {
            "titleImage": "MVP - Pantalla de Presupuesto",
            "image": "images/portfolio/easy-pool/planilha.png"
          },
          {
            "titleImage": "MVP - Opciones de Pago",
            "image": "images/portfolio/easy-pool/planilha2.png"
          },
          {
            "titleImage": "",
            "image": ""
          }
        ],
        "videos": [
          {
            "titleVideo": "EasyPool - Video de Presentación",
            "video": "https://www.youtube.com/embed/EFTK-K8jWsI"
          }
        ],
        "pdfs": [
          {
            "titlePDF": "MVP - Lista de Materiales",
            "pdf": "images/portfolio/easy-pool/MVP - EasyPool - back-up.pdf"
          },
          {
            "titlePDF": "Documento de Requisitos",
            "pdf": "images/portfolio/easy-pool/Documento de Requisitos EasyPool.pdf"
          }
        ],
        "url": "www.leopesi.com.br",
        "technologies": [
          {
            "class": ""
          },
          {
            "name": ""
          }
        ]
      }
      
		]
	  }
	]
  }